# Generated by Django 3.1.2 on 2022-10-26 07:02

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_country', models.CharField(max_length=40)),
                ('country_code', models.CharField(max_length=40)),
                ('countries', django_countries.fields.CountryField(max_length=2)),
            ],
            options={
                'ordering': ('name_country',),
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('valid_form', models.DateTimeField()),
                ('valid_to', models.DateTimeField()),
                ('discount', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('active', models.BooleanField()),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='MainCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('category_image', models.ImageField(blank=True, help_text='Please use our recommended dimensions: 120px X 120px', null=True, upload_to='categories/main/imgs/', verbose_name='Category Image')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True, unique=True, verbose_name='Slugfiy')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_update', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name_plural': '2.MainCategory',
            },
        ),
        migrations.CreateModel(
            name='MiniCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('category_image', models.ImageField(blank=True, help_text='Please use our recommended dimensions: 120px X 120px', null=True, upload_to='categories/mini/imgs/', verbose_name='Category Image')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True, unique=True, verbose_name='Slugfiy')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_update', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name_plural': '4.MiniCategory',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_client', models.EmailField(blank=True, max_length=250, null=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('sub_total', models.CharField(blank=True, max_length=50, null=True)),
                ('discount', models.CharField(blank=True, max_length=50, null=True)),
                ('shipping', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.CharField(max_length=50)),
                ('tracking_no', models.CharField(blank=True, max_length=50, null=True)),
                ('rpt_cache', models.URLField(blank=True, null=True)),
                ('weight', models.DecimalField(decimal_places=3, default=0, max_digits=10, verbose_name='WEIGHT')),
                ('is_finished', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('Underway', 'Underway'), ('COMPLETE', 'COMPLETE'), ('Refunded', 'Refunded')], default='PENDING', max_length=13)),
                ('merchant_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('order_id_paymob', models.CharField(blank=True, max_length=100, null=True)),
                ('auth_token_order', models.TextField(blank=True, null=True)),
                ('trnx_id', models.CharField(blank=True, max_length=100, null=True)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.coupon')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('quantity', models.IntegerField()),
                ('size', models.CharField(blank=True, max_length=10, null=True)),
                ('weight', models.DecimalField(decimal_places=3, default=0, max_digits=10, verbose_name='WEIGHT')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce.order')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=150, verbose_name='Name')),
                ('digital_file', models.FileField(blank=True, help_text='Please use our recommended allowed extension are zip , rar', null=True, upload_to='products/files/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['zip', 'rar'])], verbose_name='Digital File')),
                ('product_description', models.TextField(verbose_name='Short Description')),
                ('product_image', models.ImageField(default='products/product.jpg', max_length=500, upload_to='products/imgs/', verbose_name='Product Image')),
                ('content', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Full Description')),
                ('PRDPrice', models.FloatField(blank=True, null=True, verbose_name='Price')),
                ('PRDDiscountPrice', models.FloatField(blank=True, default=0, null=True, verbose_name='Discount')),
                ('additional_image_1', models.ImageField(blank=True, max_length=500, null=True, upload_to='products/imgs/product_imgs/', verbose_name='Additional  Image_1')),
                ('additional_image_2', models.ImageField(blank=True, max_length=500, null=True, upload_to='products/imgs/product_imgs/', verbose_name='Additional  Image_2')),
                ('additional_image_3', models.ImageField(blank=True, max_length=500, null=True, upload_to='products/imgs/product_imgs/', verbose_name='Additional  Image_3')),
                ('additional_image_4', models.ImageField(blank=True, max_length=500, null=True, upload_to='products/imgs/product_imgs/', verbose_name='Additional  Image_4')),
                ('feedbak_average', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Feedbak average')),
                ('feedbak_number', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Feedbak number')),
                ('width', models.FloatField(blank=True, null=True, verbose_name='Width')),
                ('height', models.FloatField(blank=True, null=True, verbose_name='Height')),
                ('PRDWeight', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=10, null=True, verbose_name='SET WEIGHT_KG')),
                ('pieces', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='pieces/set')),
                ('available', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='available')),
                ('PRDSKU', models.CharField(blank=True, max_length=100, null=True, verbose_name='SKU')),
                ('PRDISSale', models.BooleanField(default=False, verbose_name='Sale')),
                ('promotional', models.CharField(blank=True, choices=[('New', 'New'), ('Hot', 'Hot')], default='New', max_length=13, null=True)),
                ('PRDISactive', models.BooleanField(blank=True, choices=[(True, True), (False, False)], default=True, max_length=13, null=True)),
                ('PRDISDeleted', models.BooleanField(default=False, verbose_name='Product Deleted')),
                ('PRDtags', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tags')),
                ('PRDSlug', models.SlugField(allow_unicode=True, blank=True, max_length=150, null=True, unique=True, verbose_name='Slugfiy')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_update', models.DateTimeField(auto_now=True, null=True)),
                ('product_maincategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.maincategory', verbose_name='Main Category')),
                ('product_minicategor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.minicategory', verbose_name='Mini Category')),
            ],
        ),
        migrations.CreateModel(
            name='SuperCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('category_image', models.ImageField(blank=True, help_text='Please use our recommended dimensions: 120px X 120px', null=True, upload_to='categories/super/imgs/', verbose_name='Category Image')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True, unique=True, verbose_name='Slugfiy')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_update', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name_plural': '1.SuperCategory',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('category_image', models.ImageField(blank=True, help_text='Please use our recommended dimensions: 120px X 120px', null=True, upload_to='categories/sub/imgs/', verbose_name='Category Image')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True, unique=True, verbose_name='Slugfiy')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_update', models.DateTimeField(auto_now=True, null=True)),
                ('main_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.maincategory')),
            ],
            options={
                'verbose_name_plural': '3.SubCategory',
            },
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('client_comment', models.CharField(blank=True, max_length=100, null=True, verbose_name='Comment')),
                ('active', models.BooleanField(default=True)),
                ('rating_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('rating_update', models.DateTimeField(auto_now=True, null=True)),
                ('PRDIProduct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.product', verbose_name='Product')),
                ('client_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Customer', to='management.profile', verbose_name='Client')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to='management.profile', verbose_name='Supplier')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PRDIImage', models.ImageField(max_length=500, upload_to='products/imgs/product_imgs/', verbose_name='Image')),
                ('PRDIProduct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce.product', verbose_name='product')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='product',
            name='product_subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.subcategory', verbose_name='Sub Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_supercategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.supercategory', verbose_name='Super Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='management.profile', verbose_name='Product Vendor'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('country_code', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('street_address', models.CharField(max_length=100)),
                ('post_code', models.CharField(max_length=10)),
                ('City', models.CharField(max_length=100)),
                ('Email_Address', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('payment_method', models.CharField(max_length=100)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.order')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='OrderSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_client', models.EmailField(blank=True, max_length=250, null=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('sub_total', models.CharField(blank=True, max_length=50, null=True)),
                ('discount', models.CharField(blank=True, max_length=50, null=True)),
                ('shipping', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.CharField(max_length=50)),
                ('weight', models.DecimalField(decimal_places=3, default=0, max_digits=10, verbose_name='WEIGHT')),
                ('is_finished', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('Underway', 'Underway'), ('COMPLETE', 'COMPLETE'), ('Refunded', 'Refunded')], default='PENDING', max_length=13)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.coupon')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.order')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendors', to='management.profile')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='OrderDetailsSupplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('quantity', models.IntegerField()),
                ('size', models.CharField(blank=True, max_length=10, null=True)),
                ('weight', models.DecimalField(decimal_places=3, default=0, max_digits=10, verbose_name='WEIGHT')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.order')),
                ('order_details', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.orderdetails')),
                ('order_supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.ordersupplier')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.product')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce.product'),
        ),
        migrations.AddField(
            model_name='orderdetails',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_supplier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='details',
            field=models.ManyToManyField(through='ecommerce.OrderDetails', to='ecommerce.Product'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_client', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='minicategory',
            name='sub_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.subcategory'),
        ),
        migrations.AddField(
            model_name='maincategory',
            name='super_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ecommerce.supercategory'),
        ),
    ]
